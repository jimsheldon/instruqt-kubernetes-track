#!/bin/bash 

# Wait for the Instruqt host bootstrap to finish
until [ -f /opt/instruqt/bootstrap/host-bootstrap-completed ]
do
    sleep 1
done

# Wait for the Kubernetes API server to become available
while ! curl --silent --fail --output /dev/null http://localhost:8001/api 
do
    sleep 1 
done

curl -fsSL -o /tmp/get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
chmod 755 /tmp/get_helm.sh
/tmp/get_helm.sh

cat <<EOF > /tmp/argocd-values.yaml
server:
  extraArgs:
  - --insecure
  service:
    type: NodePort
    nodePortHttp: 30080
    nodePortHttps: 30443
    servicePortHttp: 8080
    servicePortHttps: 8443
EOF

kubectl create namespace argocd
helm repo add argo https://argoproj.github.io/argo-helm
helm upgrade --install argocd argo/argo-cd --namespace argocd --version 4.10.4 --values /tmp/argocd-values.yaml --wait
until kubectl -n argocd get secret argocd-initial-admin-secret >/dev/null 2>&1; do
  echo -n "."
  sleep 2
done

curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/v2.4.7/argocd-linux-amd64
chmod +x /usr/local/bin/argocd

# Enable bash completion for kubectl
echo "source /usr/share/bash-completion/bash_completion" >> /root/.bashrc
echo "complete -F __start_kubectl k" >> /root/.bashrc
